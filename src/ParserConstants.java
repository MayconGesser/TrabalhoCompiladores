public interface ParserConstants
{
    int START_SYMBOL = 50;

    int FIRST_NON_TERMINAL    = 50;
    int FIRST_SEMANTIC_ACTION = 84;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, 37, 34, 35, 36, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, 31, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 78, 78, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 78, 78, 78 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 79, 80, 83 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1,  2,  2,  2,  2,  2,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 47, -1, -1, -1, -1, 47, 47, 47 },
        { -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, -1, -1, -1, -1, 56, 56, 56 },
        { -1, -1, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 73, 73, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, 70, -1, -1, -1, -1, 73, 73, 73 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1, -1, -1, 44, 44, 44 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, 68, -1, -1, -1, -1, -1, -1, -1, -1, 66, -1, -1, -1, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, 50, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, 54, 53, -1, 55, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 41, -1, 43, -1, 42, -1, -1, -1, 40, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 58, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, 58, -1, 58, 57, -1, 58, 58, 58, -1, 58, 58, 58, -1, -1, 58, -1, -1, 57, 58, 58, -1, 58, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, 13, 13, -1, -1, 12, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 64, -1, -1, -1, 64, 63, 63, -1, -1, -1, -1, 64, -1, 64, 64, 63, 64, 64, 64, 63, 64, 64, 64, -1, -1, 64, -1, -1, 64, 64, 64, -1, 64, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, -1, 48, -1, -1, 49, 48, 49, -1, 48, 49, 49, -1, -1, 49, -1, -1, -1, 48, 48, -1, 48, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 76, -1, -1, -1, 76, 76, 76, -1, -1, -1, -1, 76, -1, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 75, -1, 76, -1, 74, 76, 76, 76, -1, 76, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, -1, -1, -1, -1, 62, 62, 62 },
        { -1, -1, -1,  4,  5,  6,  7,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        {  2,  3, 39, 50, 40 },
        { 57, 56, 51 },
        { 82, 58, 63, 62, 39, 57 },
        {  0 },
        {  4 },
        {  5 },
        {  6 },
        {  7 },
        {  8, 37, 53, 30 },
        { 37, 53, 30 },
        {  0 },
        {  3, 74 },
        { 35, 63 },
        {  0 },
        { 31, 53 },
        {  0 },
        { 55, 39, 56 },
        {  0 },
        {  9,  3, 69, 83, 39, 50 },
        { 41, 65, 63, 26, 82, 75, 32 },
        {  0 },
        { 39, 65, 63, 26, 82, 75 },
        {  0 },
        { 26, 82 },
        {  0 },
        { 10 },
        { 11 },
        { 38, 52, 77, 36 },
        { 39, 52, 77 },
        {  0 },
        {  3, 71 },
        { 51 },
        { 12, 59, 13, 52, 80 },
        { 24, 59, 25, 52 },
        { 15, 41, 63, 32 },
        { 16, 41, 64, 32 },
        { 17, 59 },
        {  0 },
        { 14, 52 },
        {  0 },
        { 45, 59 },
        { 37, 59, 30, 45, 59 },
        { 41, 64, 32 },
        {  0 },
        { 59, 73 },
        { 35, 59, 73 },
        {  0 },
        { 60, 78 },
        { 68, 60 },
        {  0 },
        { 31 },
        { 27 },
        { 34 },
        { 44 },
        { 43 },
        { 46 },
        { 81, 72 },
        { 66, 81, 72 },
        {  0 },
        { 28 },
        { 42 },
        { 18 },
        { 61, 76 },
        { 67, 61, 76 },
        {  0 },
        { 33 },
        { 29 },
        { 19 },
        { 20 },
        { 21, 61 },
        { 42, 61 },
        { 41, 59, 32 },
        {  3, 79 },
        { 54 },
        { 41, 59, 73, 32 },
        { 37, 59, 30 },
        {  0 },
        {  3 },
        { 54 },
        { 47 },
        { 48 },
        { 22 },
        { 23 },
        { 49 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado programa",
        "Era esperado id",
        "Era esperado inteiro",
        "Era esperado real",
        "Era esperado booleano",
        "Era esperado caracter",
        "Era esperado cadeia",
        "Era esperado metodo",
        "Era esperado ref",
        "Era esperado val",
        "Era esperado se",
        "Era esperado entao",
        "Era esperado senao",
        "Era esperado leia",
        "Era esperado escreva",
        "Era esperado retorne",
        "Era esperado ou",
        "Era esperado div",
        "Era esperado e",
        "Era esperado nao",
        "Era esperado falso",
        "Era esperado verdadeiro",
        "Era esperado enquanto",
        "Era esperado faca",
        "Era esperado \":\"",
        "Era esperado \"<\"",
        "Era esperado \"+\"",
        "Era esperado \"/\"",
        "Era esperado \"]\"",
        "Era esperado \"=\"",
        "Era esperado \")\"",
        "Era esperado \"*\"",
        "Era esperado \">\"",
        "Era esperado \",\"",
        "Era esperado \"}\"",
        "Era esperado \"[\"",
        "Era esperado \"{\"",
        "Era esperado \";\"",
        "Era esperado \".\"",
        "Era esperado \"(\"",
        "Era esperado \"-\"",
        "Era esperado \"<=\"",
        "Era esperado \">=\"",
        "Era esperado \":=\"",
        "Era esperado \"<>\"",
        "Era esperado num_int",
        "Era esperado num_real",
        "Era esperado literal",
        "<bloco> inválido",
        "<com_composto> inválido",
        "<comando> inválido",
        "<constante> inválido",
        "<constante_explicita> inválido",
        "<dcl_metodo> inválido",
        "<dcl_metodos> inválido",
        "<dcl_var_const> inválido",
        "<dimensao> inválido",
        "<expressao> inválido",
        "<expsimp> inválido",
        "<fator> inválido",
        "<fator_const> inválido",
        "<lid> inválido",
        "<lista_expr> inválido",
        "<mp_par> inválido",
        "<op_add> inválido",
        "<op_mult> inválido",
        "<oprel> inválido",
        "<par_formais> inválido",
        "<programa> inválido",
        "<rcomid> inválido",
        "<rep_expsimp> inválido",
        "<rep_lexpr> inválido",
        "<rep_lid> inválido",
        "<rep_par> inválido",
        "<rep_termo> inválido",
        "<replistacomando> inválido",
        "<resto_expressao> inválido",
        "<rvar> inválido",
        "<senaoparte> inválido",
        "<termo> inválido",
        "<tipo> inválido",
        "<tipo_metodo> inválido"
    };
}
